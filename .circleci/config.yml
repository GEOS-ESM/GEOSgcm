version: 2.1

executors:
  gcc-build-env:
    docker:
      - image: gmao/ubuntu20-geos-env-mkl:v6.0.22-openmpi_4.0.5-gcc_10.2.0
        auth:
          username: $DOCKERHUB_USER
          password: $DOCKERHUB_AUTH_TOKEN
    environment:
      OMPI_ALLOW_RUN_AS_ROOT: 1
      OMPI_ALLOW_RUN_AS_ROOT_CONFIRM: 1
      OMPI_MCA_btl_vader_single_copy_mechanism: none
    #XLARGE# resource_class: xlarge
    resource_class: medium

workflows:
  version: 2.1
  build-test:
    jobs:
      - build-GEOSgcm:
          context:
            - docker-hub-creds
      - make-FV3-experiment:
          context:
            - docker-hub-creds
          requires:
            - build-GEOSgcm

jobs:
  build-GEOSgcm:
    executor: gcc-build-env
    working_directory: /root/project
    steps:
      - checkout
      - run:
          name: "Versions etc"
          command: mpirun --version && gfortran --version && echo $BASEDIR && pwd && ls
      - run:
          name: "Mepo clone external repos"
          command: |
            mepo init
            mepo clone
            mepo develop GEOSgcm_App GEOSgcm_GridComp
            mepo status
      - run:
          name: "Mepo checkout-if-exists"
          command: |
            echo "${CIRCLE_BRANCH}"
            if [ "${CIRCLE_BRANCH}" != "develop" ] && [ "${CIRCLE_BRANCH}" != "master" ] && [ "${CIRCLE_BRANCH}" != "main" ]
            then
               mepo checkout-if-exists ${CIRCLE_BRANCH}
            fi
            mepo status
      - run:
          name: "CMake"
          command: |
            mkdir build
            cd build
            cmake .. -DBASEDIR=$BASEDIR/Linux -DCMAKE_Fortran_COMPILER=gfortran -DCMAKE_BUILD_TYPE=Debug
      - run:
          name: "Build"
          command: |
            cd build
            #XLARGE# make -j"$(nproc)" install
            make -j4 install
      # We need to persist the install for the next step
      - persist_to_workspace:
          root: workspace
          paths:
            - install-GEOSgcm

  make-FV3-experiment:
    executor: gcc-build-env
    working_directory: /root/project
    steps:
      - attach_workspace:
          at: workspace
      - run:
          name: "Run fv3_setup"
          command: |
            cd ${CIRCLE_WORKING_DIRECTORY}/workspace/install-GEOSgcm/bin

            INPUT_FOR_SETUP=$(cat \<<END_HEREDOC
            test-fv3-c12
            test-fv3-c12
            12
            72
            NO
            NO
            ${CIRCLE_WORKING_DIRECTORY}/workspace/test-fv3-c12
            NULL
            END_HEREDOC
            )
            echo "$INPUT_FOR_SETUP" > /tmp/input.txt

            cat /tmp/input.txt | ./fv3_setup
      - run:
          name: "Change FV_NX, FV_NY, and RUN_CMD"
          command: |
            cd ${CIRCLE_WORKING_DIRECTORY}/workspace/test-fv3-c12
            sed -i.bak -e '/set FV_NX/ s/\([0-9]\+\)/1/' -e '/set FV_NY/ s/\([0-9]\+\)/6/' -e '/set RUN_CMD/ c\set RUN_CMD = "mpirun -np "' fv3.j
      - run:
          name: "Cat fv3.j"
          command: |
            cd ${CIRCLE_WORKING_DIRECTORY}/workspace/test-fv3-c12
            cat fv3.j

      # We need to persist the install for the next step
      - persist_to_workspace:
          root: workspace
          paths:
            - test-fv3-c12
